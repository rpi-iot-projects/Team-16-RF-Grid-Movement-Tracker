[
    {
        "id": "ed077158d17603e9",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dcec226.cbbeae",
        "type": "mqtt in",
        "z": "ed077158d17603e9",
        "name": "",
        "topic": "CROTHG/MFRC",
        "qos": "2",
        "datatype": "auto",
        "broker": "2fa80ac1.95bb66",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 80,
        "wires": [
            [
                "2bdd3e6a.a00452"
            ]
        ]
    },
    {
        "id": "cfadf74e.3a0098",
        "type": "mqtt in",
        "z": "ed077158d17603e9",
        "name": "",
        "topic": "CROTHG/UID",
        "qos": "2",
        "datatype": "auto",
        "broker": "2fa80ac1.95bb66",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "48b366fe.7d9148"
            ]
        ]
    },
    {
        "id": "2bdd3e6a.a00452",
        "type": "websocket out",
        "z": "ed077158d17603e9",
        "name": "",
        "server": "69e10a9b.339d74",
        "client": "",
        "x": 370,
        "y": 80,
        "wires": []
    },
    {
        "id": "48b366fe.7d9148",
        "type": "websocket out",
        "z": "ed077158d17603e9",
        "name": "",
        "server": "1b9d4465.41473c",
        "client": "",
        "x": 330,
        "y": 140,
        "wires": []
    },
    {
        "id": "829ea06f.fa0fc",
        "type": "http response",
        "z": "ed077158d17603e9",
        "name": "",
        "x": 600,
        "y": 300,
        "wires": []
    },
    {
        "id": "9f93df47.659bd",
        "type": "http in",
        "z": "ed077158d17603e9",
        "name": "",
        "url": "/attendence",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "7ef028c8.7bc268"
            ]
        ]
    },
    {
        "id": "7ef028c8.7bc268",
        "type": "template",
        "z": "ed077158d17603e9",
        "name": "Simple Web Page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE HTML>\n<html>\n\n<head>\n    <title>Live RFID Display</title>\n    <style>\n        body {\n            text-align: center;\n            background: white;\n            font-family: sans-serif;\n        }\n\n        .grid {\n            display: grid;\n            grid-template-columns: repeat(4, 60px);\n            /* 4 columns */\n            grid-template-rows: repeat(3, 60px);\n            /* 3 rows */\n            gap: 5px;\n            justify-content: center;\n            margin: 30px auto;\n        }\n\n        .cell {\n            width: 60px;\n            height: 60px;\n            background-color: #ddd;\n            border: 1px solid #aaa;\n            transition: background-color 0.3s ease;\n        }\n\n        .active {\n            background-color: orange !important;\n        }\n    </style>\n\n    <script>\n        var ws;\n    var wsUri = \"ws:\";\n    var loc = window.location;\n    if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n\n    wsUri += \"//\" + loc.host + loc.pathname.replace(\"attendence\", \"ws/timestamp\");\n\n    function wsTimestampConnect() {\n      ws = new WebSocket(wsUri);\n\n      ws.onmessage = function(msg) {\n        const name = msg.data.split(\"#\")[1];  \n        try {\n            const coords = name.replace(/[()]/g, \"\").split(\",\"); \n            const row = parseInt(coords[0]);  // physical row\n            const col = parseInt(coords[1]);  // physical column\n            // const adjustedRow = 4 - row; // use ONLY if needed\n            // highlightCell(adjustedRow, col);\n\n            highlightCell(row, col); // This should be right\n        } catch (e) {\n            console.error(\"Bad coordinate format:\", name);\n        }\n        };\n\n\n      ws.onopen = () => console.log(\"Connected to ws/timestamp\");\n      ws.onclose = () => setTimeout(wsTimestampConnect, 3000);\n    }\n\n    function highlightCell(row, col) {\n        // Swap row and column to fix inverted grid display\n        const selector = `.cell[data-row='${row}'][data-col='${col}']`;\n        const cell = document.querySelector(selector);\n        if (cell) {\n            cell.classList.add(\"active\");\n            setTimeout(() => cell.classList.remove(\"active\"), 3000);\n        } else {\n            console.warn(`No cell found at row=${row}, col=${col}`);\n        }\n    }\n\n\n    function createGrid() {\n      const grid = document.createElement(\"div\");\n      grid.className = \"grid\";\n      for (let row = 1; row <= 3; row++) {     // 3 rows\n        for (let col = 1; col <= 4; col++) {   // 4 columns\n          const cell = document.createElement(\"div\");\n          cell.className = \"cell\";\n          cell.dataset.row = row;\n          cell.dataset.col = col;\n          cell.textContent = `(${row},${col})`; \n          grid.appendChild(cell);\n        }\n      }\n      document.body.appendChild(grid);\n    }\n\n    window.onload = function() {\n      createGrid();\n      wsTimestampConnect();\n    };\n    </script>\n</head>\n\n<body>\n    <h2 style=\"color: #ff6600;\">Live RFID Grid</h2>\n</body>\n\n</html>",
        "x": 380,
        "y": 300,
        "wires": [
            [
                "829ea06f.fa0fc"
            ]
        ]
    },
    {
        "id": "8fd3ee10.74469",
        "type": "http response",
        "z": "ed077158d17603e9",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/css"
        },
        "x": 560,
        "y": 240,
        "wires": []
    },
    {
        "id": "84b721c0.dad09",
        "type": "template",
        "z": "ed077158d17603e9",
        "name": "Landin CSS",
        "field": "payload",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "body {\n  font-family: \"Lato\", sans-serif;\n}\n\n.center {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n/* Style the header */\n.header {\n  background-color: #f44336;\n  color: white;\n  text-align: center;\n  width: 100%;\n  height: 14%;\n  font-size: 62px;\n    \n}\n\n.topright {\n  position: absolute;\n  padding-top: 10px;\n  top: 8px;\n  right: 16px;\n  font-size: 18px;\n}\n\n\n\n.accountBtn {\n    display: flex;\n    justify-content: space-around;\n    background-color: #f44336; /* Red */\n    border: #f000000;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n\n}\n\n/* On mouse-over */\n.accountBtn:hover {\n  color: #f1f1f1;\n}\n\n/* Clear floats after the header */\n.header:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n\ninput[type=text] {\n  margin-left:40%;\n  width: 200px;\n  box-sizing: border-box;\n  border: 2px solid #ccc;\n  border-radius: 4px;\n  font-size: 16px;\n  background-color: white;\n  background-position: 10px 10px; \n  background-repeat: no-repeat;\n  padding: 12px 20px 12px 40px;\n  -webkit-transition: width 0.4s ease-in-out;\n  transition: width 0.4s ease-in-out;\n}\n\ninput[type=text]:focus {\n  width: 30%;\n}\n\n\n.searchBtn {\n    display: flex;\n    justify-content: space-around;\n    background-color: #818181;\n    border: #f000000;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n\n}\n\n/* On mouse-over */\n.searchBtn:hover {\n  color: #f1f1f1;\n}\n\n.pageBtn {\n  justify-content: center;\n    background-color: #818181;\n    border: #f000000;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display:none;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n    margin-left: auto;\n    margin-right: auto;\n\n}\n\n/* On mouse-over */\n.pageBtn:hover {\n  color: #f1f1f1;\n}\n\n\n\n/* landin Main content */\n.landinMain {\n  font-size: 20px; /* Increased text to enable scrolling */\n  width: 100%;\n\n}\n\n\n\n.titleBtn {\n  background-color: #f44336; /* Red */\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 20px;\n  margin: 4px 2px;\n  cursor: pointer;\n}\n\n\n.title {\n    color: white;\n    display: flex;\n    justify-content: space-between;\n\n}\n\n/* On mouse-over */\n.title:hover {\n  color: #f1f1f1;\n}\n\n\n#table {\n  font-family: Arial, Helvetica, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\n#table td, #table th {\n  border: 2px solid #ddd;\n  padding: 8px;\n\n\n}\n\n#table tr:nth-child(even){background-color: #f2f2f2;}\n\n#table tr:hover {background-color: #ddd;}\n\n#table th {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  text-align: left;\n  background-color: #ffad33;\n  color: white;\n}\na {\n    color: black;\n    text-decoration: none;\n}\n",
        "output": "str",
        "x": 380,
        "y": 240,
        "wires": [
            [
                "8fd3ee10.74469"
            ]
        ]
    },
    {
        "id": "1b0ff021.bb64d",
        "type": "http in",
        "z": "ed077158d17603e9",
        "name": "landin template",
        "url": "/landin_template.css",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "84b721c0.dad09"
            ]
        ]
    },
    {
        "id": "2fa80ac1.95bb66",
        "type": "mqtt-broker",
        "name": "Broker",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "69e10a9b.339d74",
        "type": "websocket-listener",
        "path": "/ws/timestamp",
        "wholemsg": "false"
    },
    {
        "id": "1b9d4465.41473c",
        "type": "websocket-listener",
        "path": "/ws/uid",
        "wholemsg": "false"
    }
]